---
- name: Create superset group.
  group:
    name: "{{ superset_group }}"

- name: Create superset user.
  user:
    name: "{{ superset_user }}"
    group: "{{ superset_group }}"
    groups:
      - "{{ superset_wsgi_group }}"
    shell: "{{ superset_shell }}"
    home: "{{ superset_home }}"
    create_home: yes

- include_tasks: "install-{{ superset_python_executable }}.yml"

- name: Ensure dependencies are installed
  apt:
    pkg: "{{ superset_apt_dependencies_packages }}"
    state: present
    update_cache: yes
    cache_valid_time: 600

- name: Delete the Superset virtualenv directory
  file:
    state: absent
    path: "{{ superset_virtualenv_path }}"
  when: superset_recreate_virtualenv|bool

- name: Make sure the Superset virtualenv directory exists
  file:
    state: directory
    path: "{{ superset_virtualenv_path }}"
    owner: "{{ superset_user }}"
    group: "{{ superset_group }}"
    recurse: yes

- name: Install Superset dependent pip libraries
  become: true
  become_user: "{{ superset_user }}"
  pip:
    name: "{{ superset_pip_dependencies_packages }}"
    state: present
    virtualenv: "{{ superset_virtualenv_path }}"
    virtualenv_python: "{{ superset_python_executable }}"

- name: Install superset patchup (ketchup)
  become: true
  become_user: "{{ superset_user }}"
  pip:
    name: 'git+{{ superset_ketchup_git_url }}@{{ superset_ketchup_version }}'
    state: forcereinstall
    virtualenv: "{{ superset_virtualenv_path }}"
    virtualenv_python: "{{ superset_python_executable }}"
  when: superset_use_ketchup|bool

- name: Install flask_cors
  become: true
  become_user: "{{ superset_user }}"
  pip:
    name: flask_cors
    state: present
    virtualenv: "{{ superset_virtualenv_path }}"
    virtualenv_python: "{{ superset_python_executable }}"
  when: superset_enable_cors|bool

- block:
  - name: Create postgres database
    postgresql_db:
      name: "{{ superset_postgres_db_name }}"
      login_host: "{{ superset_postgres_db_host }}"
      login_user: "{{ superset_postgres_login_user }}"
      login_password: "{{ superset_postgres_login_password }}"
    tags: [ database ]

  - name: Create postgres user
    postgresql_user:
      name: "{{ superset_postgres_db_user }}"
      password: "{{ superset_postgres_db_pass }}"
      encrypted: true
      db: "{{ superset_postgres_db_name }}"
      login_host: "{{ superset_postgres_db_host }}"
      login_user: "{{ superset_postgres_login_user }}"
      login_password: "{{ superset_postgres_login_password }}"
    tags: [ database ]
  when: superset_postgres_login|bool and superset_perform_restart|bool

- block:
  - name: Create postgres database
    postgresql_db:
      name: "{{ superset_postgres_db_name }}"
    tags: [ database ]

  - name: Create postgres user
    postgresql_user:
      name: "{{ superset_postgres_db_user }}"
      password: "{{ superset_postgres_db_pass }}"
      encrypted: true
      db: "{{ superset_postgres_db_name }}"
    tags: [ database ]
  when: not superset_postgres_login|bool and superset_perform_restart|bool

- name: Install superset from pypi
  become: true
  become_user: "{{ superset_user }}"
  pip:
    name: "{{ superset_package_name }}"
    version: "{{ superset_version }}"
    virtualenv: "{{ superset_virtualenv_path }}"
    virtualenv_python: "{{ superset_python_executable }}"
  when: not superset_install_from_git|bool

- block:
  - name: Install superset from git
    become: true
    become_user: "{{ superset_user }}"
    pip:
      name: 'git+{{ superset_git_url }}@{{ superset_version }}#egg=superset'
      state: forcereinstall
      virtualenv: "{{ superset_virtualenv_path }}"
      virtualenv_python: "{{ superset_python_executable }}"
      extra_args: "-e"

  - name: Install packages from requirements.txt
    become: true
    become_user: "{{ superset_user }}"
    pip:
      chdir: "{{ superset_virtualenv_path }}/src/superset"
      requirements: "requirements.txt"
      virtualenv: "{{ superset_virtualenv_path }}"
      virtualenv_python: "{{ superset_python_executable }}"
    when: superset_version is version_compare('0.34.0', '>=')

  - name: Copy additional static files
    become: true
    become_user: "{{ superset_user }}"
    copy:
      remote_src: yes
      src: "{{ superset_virtualenv_path }}/lib/python3.6/site-packages/flask_appbuilder/static/appbuilder"
      dest: "{{ superset_virtualenv_path }}/src/superset/superset/static/"

  when: superset_install_from_git|bool

- name: Install additional packages
  become: true
  become_user: "{{ superset_user }}"
  pip:
    name: "{{ superset_additional_pip_packages }}"
    virtualenv: "{{ superset_virtualenv_path }}"
    virtualenv_python: "{{ superset_python_executable }}"
  when: superset_install_additional_pip_packages|bool

- name: Make sure the superset upload directories exists
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ superset_user }}"
    group: "{{ superset_group }}"
  with_items:
    - "{{ superset_img_upload_dir }}"
    - "{{ superset_upload_dir }}"
